spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username =root
spring.datasource.password =b150100022M
spring.jpa.hibernate.ddl-auto=update
eureka.client.serviceUrl.defaulZone=http://localhost:8761/eureka
spring.application.name=order-service

server.port=8081


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j
#http://localhost:8081/actuator çok fazla bilgi var burada
#circuitbreaker ın tüm statelerini görmek için (open close half open)
resilience4j.circuitbreaker.instances.inventory.registerHealtIndicator=true

resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#slidingwindow kaç tane requset fail olursa state değişsin
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


#resilience4j timeout properties
#isteği kaç saniye bekliyecek
resilience4j.timeLimiter.instances.inventory.timeout-duration=3s

#Resilience4j retry properties 5 s arayla 3 kere cevap vermezse circuitbrekar devreye girer
resilience4j.retry.instances.inventory.max-attemps=3
resilience4j.retry.instances.inventory.wait-duration=5s

#Kafka Properties

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.hepsisurada.orderservice.event.OrderPlaceEvent


 